package com.proyecto1.compiler.analyzer.reporteria;
import java_cup.runtime.Symbol;

import com.proyecto1.model.Puntaje;
import com.proyecto1.controller.VariableController;
import com.proyecto1.controller.GraficaController;
import com.proyecto1.controller.ProyectoController;

/* METODO PARSER -> RETORNA EL SIMBOLO ANALIZADO */
/*----------------------------------------------------------------------------------------------------------------------------------*/
parser code
{:
    private Symbol simbolo;
    private Puntaje puntaje;
    
    public void syntax_error(Symbol simbolo){
        this.simbolo = simbolo;
    }

    public Symbol getSimbolo(){
        return this.simbolo;
    }
:};

/* SIMBOLOS TERMINALES */
/*----------------------------------------------------------------------------------------------------------------------------------*/

terminal Linea,
         STRING,
         DOUBLE,
         Igual,
         ParentesisInicio,
         ParentesisFinal,
         LlaveInicio,
         LlaveFinal,
         CorcheteInicio,
         CorcheteFinal,
         Coma,
         PuntoComa,
         DosPuntos,
         Dollar,
         PuntajeGeneral,
         PuntajeEspecifico,
         DefinirGlobales,
         GenerarReporteEstadistico,
         GraficaBarras,
         GraficaPie,
         GraficaLineas,
         Compare,
         Titulo,
         Archivo,
         EjeX,
         TituloX,
         TituloY,
         Valores,
         ERROR; 

terminal String Decimal,
                Cadena,
                Ruta,
                Identificador;

/* SIMBOLOS NO TERMINALES */
/*----------------------------------------------------------------------------------------------------------------------------------*/

non terminal INICIO, 
             GENERAR_REPORTE_ESTADISTICO, 
             INSTRUCCION,
             PUNTAJE_GENERAL,
             PUNTAJE_ESPECIFICO,
             LISTA_STRING,
             LISTA_DOUBLE,
             TITULO,
             ARCHIVO,
             EJEX,
             TITULOX,
             TITULOY,
             VALORES,
             DECLARAR_VARIABLE,
             DEFINIR_GLOBALES,
             CARACTERISTICA_BARRAS,
             GRAFICA_BARRAS,
             CARACTERISTICA_PIE,
             GRAFICA_PIE,
             CARACTERISTICA_LINEAS,
             GRAFICA_LINEAS,
             COMPARE;

precedence left Identificador;
precedence left Cadena, Ruta; 

// SE DEFINI INICIO COMO PRIMER NO TERMINAL
start with INICIO;

/* PRODUCCIONES */
/*----------------------------------------------------------------------------------------------------------------------------------*/

INICIO ::= GENERAR_REPORTE_ESTADISTICO;


// GENERAR REPORTE ESTADISTICO
GENERAR_REPORTE_ESTADISTICO ::= GenerarReporteEstadistico LlaveInicio INSTRUCCION;

// INSTRUCCIONES
INSTRUCCION ::= DEFINIR_GLOBALES INSTRUCCION
              | GRAFICA_BARRAS INSTRUCCION
              | GRAFICA_PIE INSTRUCCION
              | GRAFICA_LINEAS INSTRUCCION
              | COMPARE INSTRUCCION
              | LlaveFinal;

// PUNTAJE GENERAL 
PUNTAJE_GENERAL ::= Dollar LlaveInicio PuntajeGeneral LlaveFinal {: puntaje = new Puntaje("PuntajeGeneral"); :};

// PUNTAJE ESPECIFICO 
PUNTAJE_ESPECIFICO ::= Dollar LlaveInicio PuntajeEspecifico Coma Cadena:nombreArchivo Coma Cadena:valor Coma Cadena:identificador LlaveFinal {: puntaje = new Puntaje("PuntajeEspecifico", nombreArchivo, valor, identificador); :};

// LISTA DE STRING
LISTA_STRING ::= Cadena:valor Coma {: GraficaController.getInstance().addEjeX(valor.replace("\"",""), "", valorright, valorleft); :} LISTA_STRING
               | Identificador:nombreVariable Coma {: GraficaController.getInstance().addEjeX("", nombreVariable, nombreVariableright, nombreVariableleft); :} LISTA_STRING
               | Cadena:valor {: GraficaController.getInstance().addEjeX(valor.replace("\"",""), "", valorright, valorleft); :} 
               | Identificador:nombreVariable {: GraficaController.getInstance().addEjeX("", nombreVariable, nombreVariableright, nombreVariableleft); :};

// LISTA DE DOUBLE
LISTA_DOUBLE ::= Decimal:valor Coma {: GraficaController.getInstance().addValor(Double.parseDouble(valor), "", valorright, valorleft); :} LISTA_DOUBLE
               | PUNTAJE_GENERAL:pg Coma {: GraficaController.getInstance().addValor(puntaje, pgright, pgleft); puntaje = null; :} LISTA_DOUBLE
               | PUNTAJE_ESPECIFICO:pg Coma {: GraficaController.getInstance().addValor(puntaje, pgright, pgleft); puntaje = null; :} LISTA_DOUBLE
               | Identificador:nombreVariable Coma {: GraficaController.getInstance().addValor(0.0, nombreVariable, nombreVariableright, nombreVariableleft); :} LISTA_DOUBLE
               | Decimal:valor {: GraficaController.getInstance().addValor(Double.parseDouble(valor), "", valorright, valorleft); :}
               | PUNTAJE_GENERAL:pg {: GraficaController.getInstance().addValor(puntaje, pgright, pgleft); puntaje = null; :}
               | PUNTAJE_ESPECIFICO:pg {: GraficaController.getInstance().addValor(puntaje, pgright, pgleft); puntaje = null;  :}
               | Identificador:nombreVariable {: GraficaController.getInstance().addValor(0.0, nombreVariable, nombreVariableright, nombreVariableleft); :};

// TITULO
TITULO ::= Titulo DosPuntos Cadena:valor PuntoComa {: GraficaController.getInstance().addTitulo(valor.replace("\"",""), "", valorright, valorleft); :}
         | Titulo DosPuntos Identificador:nombreVariable PuntoComa {: GraficaController.getInstance().addTitulo("", nombreVariable, nombreVariableright, nombreVariableleft); :};

// ARCHIVO
ARCHIVO ::= Archivo DosPuntos Cadena:valor PuntoComa {: GraficaController.getInstance().addArchivo(valor.replace("\"",""), "", valorright, valorleft); :}
          | Archivo DosPuntos Identificador:nombreVariable PuntoComa {: GraficaController.getInstance().addArchivo("", nombreVariable, nombreVariableright, nombreVariableleft); :};

// EJE X
EJEX ::= EjeX DosPuntos CorcheteInicio LISTA_STRING CorcheteFinal PuntoComa; 

// TITULO X
TITULOX ::= TituloX DosPuntos Cadena:valor PuntoComa {: GraficaController.getInstance().addTitulox(valor.replace("\"",""), "", valorright, valorleft); :}
          | TituloX DosPuntos Identificador:nombreVariable PuntoComa {: GraficaController.getInstance().addTitulox("", nombreVariable, nombreVariableright, nombreVariableleft); :};

// TITULO Y
TITULOY ::= TituloY DosPuntos Cadena:valor PuntoComa {: GraficaController.getInstance().addTituloy(valor.replace("\"",""), "", valorright, valorleft); :}
          | TituloY DosPuntos Identificador:nombreVariable PuntoComa {: GraficaController.getInstance().addTituloy("", nombreVariable, nombreVariableright, nombreVariableleft); :};

// VALORES
VALORES ::= Valores DosPuntos CorcheteInicio LISTA_DOUBLE CorcheteFinal PuntoComa; 

// DECLARAR VARIABLES
DECLARAR_VARIABLE ::= STRING Identificador:nombreVariable Igual Cadena:valor PuntoComa {: VariableController.getInstance().add(valor.replace("\"",""), nombreVariable, nombreVariableright, nombreVariableleft); :} DECLARAR_VARIABLE 
                    | DOUBLE Identificador:nombreVariable Igual Decimal:valor PuntoComa {: VariableController.getInstance().add(Double.parseDouble(valor), nombreVariable, nombreVariableright, nombreVariableleft); :} DECLARAR_VARIABLE
                    | DOUBLE Identificador:nombreVariable Igual PUNTAJE_GENERAL:pg PuntoComa {: VariableController.getInstance().add(puntaje, nombreVariable, pgright, pgleft); puntaje = null; :} DECLARAR_VARIABLE 
                    | DOUBLE Identificador:nombreVariable Igual PUNTAJE_ESPECIFICO:pg PuntoComa {: VariableController.getInstance().add(puntaje, nombreVariable, pgright, pgleft); puntaje = null; :} DECLARAR_VARIABLE
                    | LlaveFinal;
 
// DEFINIR GLOBALES
DEFINIR_GLOBALES ::= DefinirGlobales LlaveInicio DECLARAR_VARIABLE;

// CARACTERISTICAS DE GRAFICA DE BARRAS
CARACTERISTICA_BARRAS ::= TITULO CARACTERISTICA_BARRAS
                        | EJEX CARACTERISTICA_BARRAS
                        | VALORES CARACTERISTICA_BARRAS
                        | TITULOX CARACTERISTICA_BARRAS
                        | TITULOY CARACTERISTICA_BARRAS
                        | LlaveFinal;

// GRAFICA DE BARRAS
GRAFICA_BARRAS ::= GraficaBarras LlaveInicio CARACTERISTICA_BARRAS {: GraficaController.getInstance().addGraficaBarras(); :};

// CARACTERISTICAS DE GRAFICA DE PIE
CARACTERISTICA_PIE ::= TITULO CARACTERISTICA_PIE
                     | EJEX CARACTERISTICA_PIE
                     | VALORES CARACTERISTICA_PIE
                     | LlaveFinal;

// GRAFICA DE PIE
GRAFICA_PIE ::= GraficaPie LlaveInicio CARACTERISTICA_PIE {: GraficaController.getInstance().addGraficaPie(); :};

// CARACTERISTICAS DE GRAFICA DE LINEAS
CARACTERISTICA_LINEAS ::= TITULO CARACTERISTICA_LINEAS
                        | ARCHIVO CARACTERISTICA_LINEAS
                        | LlaveFinal;

// GRAFICA DE LINEAS
GRAFICA_LINEAS ::= GraficaLineas LlaveInicio CARACTERISTICA_LINEAS {: GraficaController.getInstance().addGraficaLineas(); :} ;

// COMPARE
COMPARE ::= Compare ParentesisInicio Ruta:rutaProyecto1 Coma Ruta:rutaProyecto2 ParentesisFinal PuntoComa 
{: 
VariableController.getInstance().addRutaProyecto1(rutaProyecto1.replace("'", ""));
VariableController.getInstance().addRutaProyecto2(rutaProyecto2.replace("'", ""));
:};
